
# Database URL
# Prisma supports the native connection string format for PostgreSQL, MySQL, SQLite, SQL Server, MongoDB and CockroachDB.
# See the documentation for all the connection string options: https://pris.ly/d/connection-strings
DATABASE_URL=file:./dev.db

# Port number
PORT=4000

# Node environment
NODE_ENV=development

# Tokens
# jwt secret key
JWT_SECRET=thisisaccesstokensecret
# time when jwt will be expired : a string describing a time span vercel/ms (https://github.com/vercel/ms). Eg: 60, 10m, 10h, 7d
JWT_MAX_AGE=1d
# time when refresh token will be expired : a string describing a time span vercel/ms (https://github.com/vercel/ms). Eg: 60, 10m, 10h, 7d
REFRESH_TOKEN_MAX_AGE=1d
# time when email verification token will be expired : a string describing a time span vercel/ms (https://github.com/vercel/ms). Eg: 60, 10m, 10h, 7d
EMAIL_VERIFICATION_TOKEN_MAX_AGE=5m
# the url to the email verification page on the the front-end app
EMAIL_VERIFICATION_FRONTEND_URL=http://localhost:3000/auth/verify-email
# time when reset password token will be expired : a string describing a time span vercel/ms (https://github.com/vercel/ms). Eg: 60, 10m, 10h, 7d
RESET_PASSWORD_TOKEN_MAX_AGE=5m
# the url to the reset password page on the the front-end app
RESET_PASSWORD_FRONTEND_URL=http://localhost:3000/auth/reset-password

# Encryption key
ENCRYPTION_KEY=thisisencryptionkey

# SMTP configuration options for the email service
# For testing, you can use a fake SMTP service like Ethereal: https://ethereal.email/create
SMTP_HOST=smtp.ethereal.email
SMTP_PORT=587
SMTP_USERNAME=example@ethereal.email
SMTP_PASSWORD=password1
EMAIL_FROM=support@app.com